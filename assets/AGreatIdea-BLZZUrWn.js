import{_ as p}from"./ValaxyMain.vue_vue_type_style_index_0_lang-BhuFmJyN.js";import{c as f,w as a,f as u,e as c,p as l,o as g,g as r,j as v,r as t}from"./app-C2i5pA99.js";import"./YunComment.vue_vue_type_style_index_0_lang-BbrbFk9z.js";import"./index-C5okkQwF.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-DEVZZAxb.js";import"./post-CfW6kSpx.js";const J={__name:"AGreatIdea",setup(h,{expose:m}){const o=JSON.parse('{"title":"A Great Idea","description":"","frontmatter":{"title":"A Great Idea","date":"2024-11-29","updated":"2024-11-29","categories":"随笔","tags":["随笔"],"top":1},"headers":[{"level":2,"title":"A Great Idea","slug":"a-great-idea","link":"#a-great-idea","children":[]}],"relativePath":"pages/posts/AGreatIdea.md","path":"/home/runner/work/Viewstarts.github.io/Viewstarts.github.io/pages/posts/AGreatIdea.md","lastUpdated":1734886398000}'),n=c(),s=o.frontmatter||{};return n.meta.frontmatter=Object.assign(n.meta.frontmatter||{},o.frontmatter||{}),l("pageData",o),l("valaxy:frontmatter",s),globalThis.$frontmatter=s,m({frontmatter:{title:"A Great Idea",date:"2024-11-29",updated:"2024-11-29",categories:"随笔",tags:["随笔"],top:1}}),(e,i)=>{const d=p;return g(),f(d,{frontmatter:u(s)},{"main-content-md":a(()=>i[0]||(i[0]=[r("h2",{id:"a-great-idea",tabindex:"-1"},[v("A Great Idea "),r("a",{class:"header-anchor",href:"#a-great-idea","aria-label":'Permalink to "A Great Idea"'},"​")],-1),r("p",null,"​ 大家好，我是ViewStar，最近刚入职半个月，工作的事情许是打扰了自己很久。一直准备的计划都没有实行。不过也不是完全没有收获，一直给自己准备了一些新坑，比如说之前的坑，想买一个阿里云或者腾讯云的云服务器，配个域名。然后给我的博客配一个专门的后台管理系统和数据，部署到服务器上。再把自己的blog用vue3+其他的ui组件框架，从0开始做轮子重构一次…等等等。",-1),r("p",null,"​ 以前的坑还没完成呢，现在自己又有新坑了。我这几天一直在想一般用学一门后端语言。虽然说自己曾经学过Java语言，学js的时候，也是一直拿Java和js进行对比。那个时候感觉Java的多好多好。(这算是白月光吗？)，但是真到了自己打算学后端语言部署后端的时候，我就犯难了。首先第一是，我前端目前js语言用的并不是很熟练，曾经自我感觉良好，但是目前工作给我打击了。其次是，Java语言要想做后台的话，学习周期太长了。以至于我在思考，到底是慢慢的学Java，还是学express框架然后学下koa呢。这样子我只需要熟悉一下msql就行了。总之我还在思考。因为目前很多人都说，初级前端，不要学后端，最多学一下node就行。我总感觉，目前国内的市场，node属实有点堪忧。。。",-1),r("p",null,"​ 然后呢，汇报一下这半个月的学习情况。首先以为进了公司就是不停的写页面，然后熟练运用自己的div+ui组件大法，做所谓的增删改查。结果没想到一上来，让我封装ui组件，虽然是基于antdesign做的二次封装。但是对我这初级前端来说，好像稍微有点难度。。。所幸坚持到现在，也慢慢能看懂同事代码了。希望后面可以从0到有二次封装一个ui组件吧。",-1),r("p",null,"​ 最近再同事大佬的告知下，才发现父组件使用子组件的时候，可以通过定义一个ref，然后:ref在子组件的上，这样子就可以拿到子组件里的所有方法。再通过.value的方式，我门可以完成一个回显，当用户输入内容的时候，父组件里面输入内容，传给子组件，子组件再把得到的内容层层处理，最后再回显出来。这样子外面就可以拿到用户自己输入的值。刚开始我在想这不是多此一举吗？后来再实际的业务中运用的时候，才觉得，这种操作是应该的，是非常合理的。好的，学到一招!",-1),r("p",null,"​ 然后今天再看同事代码的时候，也发现了同事封装组件最常用的callback父传子，之前同事说暴露暴露，我一直以为是子传父，子组件定义事件，传给父组件。然后通过事件暴露出去呢。结果今天才发现，所谓的暴露还是父传子。只是父组件把一个函数传给了子组件，子组件接住了父组件的函数，然后通过函数的形参，父组件外面直接打印形参就可以拿到子组件里面的值。这种操作确实挺神奇的，是我第一次见到。不得不说，大佬就是大佬。希望自己以后也能这么厉害吧，我会努力的！",-1),r("p",null,"​ 以上就是这周的周报了，梦想还未到达，希望自己还能继续努力吧！！！最后在云游君的群里，一个大佬的话让我醍醐灌顶，就以此结尾吧。",-1),r("p",null,[r("code",null,"如果喜欢就去学。不要自卑说自己技术菜。技术永无止境，技术水平高了也不要自傲。现在有时候在职场上技术真不是很重要，因为有些不懂技术或者能力不强的根本不知道你在做什么，某些情况下会说话比技术更重要。这就是现状。是否把技术视作为第一(比如黑客精神)，这就要看个人价值观。")],-1)])),"main-header":a(()=>[t(e.$slots,"main-header")]),"main-header-after":a(()=>[t(e.$slots,"main-header-after")]),"main-nav":a(()=>[t(e.$slots,"main-nav")]),"main-content":a(()=>[t(e.$slots,"main-content")]),"main-content-after":a(()=>[t(e.$slots,"main-content-after")]),"main-nav-before":a(()=>[t(e.$slots,"main-nav-before")]),"main-nav-after":a(()=>[t(e.$slots,"main-nav-after")]),comment:a(()=>[t(e.$slots,"comment")]),footer:a(()=>[t(e.$slots,"footer")]),aside:a(()=>[t(e.$slots,"aside")]),"aside-custom":a(()=>[t(e.$slots,"aside-custom")]),default:a(()=>[t(e.$slots,"default")]),_:3},8,["frontmatter"])}}};export{J as default};
